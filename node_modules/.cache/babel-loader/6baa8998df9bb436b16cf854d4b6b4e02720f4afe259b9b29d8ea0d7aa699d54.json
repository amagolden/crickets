{"ast":null,"code":"var _jsxFileName = \"/Users/angelagoldenstein/Desktop/crickets/src/pages/AllHands.jsx\",\n  _s = $RefreshSig$();\nimport '../global.css';\nimport EmployeeMeeting from '../components/employeemeeting';\nimport AppNavbar from '../components/navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet defaultAllHands = [{\n  id: 1,\n  date: '9/1/24',\n  topic: 'Regulation',\n  isDone: false\n}, {\n  id: 2,\n  date: '8/1/24',\n  topic: 'New Product Features',\n  isDone: true\n}, {\n  id: 3,\n  date: '7/1/24',\n  topic: 'Q3 Goals',\n  isDone: true\n}, {\n  id: 4,\n  date: '6/1/24',\n  topic: 'Marketing Campaign',\n  isDone: true\n}];\nfunction AllHands() {\n  _s();\n  const [meetings, setMeetings] = useState(defaultAllHands);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Company All Hands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upcoming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), meetings.map(element => /*#__PURE__*/_jsxDEV(EmployeeMeeting, {\n        id: element.id,\n        date: element.date,\n        topic: element.topic\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AllHands, \"VHhKEaerWdIu27KBfaj0oY2mc7w=\");\n_c = AllHands;\nexport default AllHands;\nvar _c;\n$RefreshReg$(_c, \"AllHands\");","map":{"version":3,"names":["EmployeeMeeting","AppNavbar","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultAllHands","id","date","topic","isDone","AllHands","_s","meetings","setMeetings","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","element","_c","$RefreshReg$"],"sources":["/Users/angelagoldenstein/Desktop/crickets/src/pages/AllHands.jsx"],"sourcesContent":["import '../global.css';\nimport EmployeeMeeting from '../components/employeemeeting';\nimport AppNavbar from '../components/navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react';\n\nlet defaultAllHands = [\n    {\n        id: 1,\n        date: '9/1/24',\n        topic: 'Regulation',\n        isDone: false,\n    },\n    {\n        id: 2,\n        date: '8/1/24',\n        topic: 'New Product Features',\n        isDone: true,\n    },\n    {\n        id: 3,\n        date: '7/1/24',\n        topic: 'Q3 Goals',\n        isDone: true,\n    },\n    {\n        id: 4,\n        date: '6/1/24',\n        topic: 'Marketing Campaign',\n        isDone: true,\n    },\n  ]\n\nfunction AllHands() {\n\n    const [meetings, setMeetings] = useState(defaultAllHands);\n\n    return (\n    <>\n    <AppNavbar />\n      <div className=\"polls-page\">\n        <h1>Company All Hands</h1>\n        <h2>Upcoming</h2>\n        <h2>Previous</h2>\n        {meetings.map(element => \n          <EmployeeMeeting\n            key={element.id}\n            id={element.id} \n            date={element.date}\n            topic={element.topic}\n          />)}\n      </div>\n    </>\n  );\n}\n\nexport default AllHands;\n"],"mappings":";;AAAA,OAAO,eAAe;AACtB,OAAOA,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAO,sCAAsC;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,IAAIC,eAAe,GAAG,CAClB;EACIC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE;AACZ,CAAC,EACD;EACIH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,sBAAsB;EAC7BC,MAAM,EAAE;AACZ,CAAC,EACD;EACIH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,UAAU;EACjBC,MAAM,EAAE;AACZ,CAAC,EACD;EACIH,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAE;AACZ,CAAC,CACF;AAEH,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACK,eAAe,CAAC;EAEzD,oBACAH,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACAZ,OAAA,CAACH,SAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXhB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAL,QAAA,gBACzBZ,OAAA;QAAAY,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BhB,OAAA;QAAAY,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhB,OAAA;QAAAY,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBN,QAAQ,CAACQ,GAAG,CAACC,OAAO,iBACnBnB,OAAA,CAACJ,eAAe;QAEdQ,EAAE,EAAEe,OAAO,CAACf,EAAG;QACfC,IAAI,EAAEc,OAAO,CAACd,IAAK;QACnBC,KAAK,EAAEa,OAAO,CAACb;MAAM,GAHhBa,OAAO,CAACf,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACN,CAAC;AAEP;AAACP,EAAA,CArBQD,QAAQ;AAAAY,EAAA,GAARZ,QAAQ;AAuBjB,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}